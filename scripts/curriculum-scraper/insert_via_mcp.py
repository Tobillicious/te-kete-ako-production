"""
Insert curriculum statements via direct SQL (bypasses RLS)
This is for when we can't use the API due to RLS restrictions
"""

import json
from pathlib import Path

# Read the scraped data
data_file = Path('scraped-data/temataiaho_2025_english.json')
with open(data_file, 'r', encoding='utf-8') as f:
    data = json.load(f)

statements = data['statements']

print(f"-- Inserting {len(statements)} English curriculum statements")
print("-- Generated by: insert_via_mcp.py")
print()

# Generate SQL INSERT statements
for i, stmt in enumerate(statements, 1):
    # Escape single quotes for SQL
    text = stmt['statement_text'].replace("'", "''")
    strand = stmt['strand'].replace("'", "''") if stmt.get('strand') else ''
    
    # Convert year_levels array to PostgreSQL array format
    year_levels_str = '{' + ','.join(map(str, stmt['year_levels'])) + '}'
    
    # Convert examples to PostgreSQL array format
    if stmt.get('examples'):
        examples_escaped = [ex.replace("'", "''") for ex in stmt['examples']]
        examples_str = "ARRAY['" + "','".join(examples_escaped) + "']"
    else:
        examples_str = 'NULL'
    
    print(f"""-- Statement {i}/{len(statements)}
INSERT INTO curriculum_statements (
    curriculum_version,
    version_status,
    effective_date,
    learning_area,
    phase,
    strand,
    element,
    statement_text,
    year_levels,
    examples,
    quality_score
) VALUES (
    '{stmt['curriculum_version']}',
    'mandatory',
    '2025-01-01',
    '{stmt['learning_area']}',
    '{stmt['phase']}',
    '{strand}',
    '{stmt.get('element', '')}',
    '{text}',
    ARRAY{year_levels_str}::INTEGER[],
    {examples_str},
    100
);
""")

print(f"\n-- âœ“ Generated {len(statements)} INSERT statements")

