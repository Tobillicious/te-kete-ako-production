<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signing you in... - Te Kete Ako</title>
    
    <!-- üé® ULTIMATE BEAUTY SYSTEM -->
    <link rel="stylesheet" href="/css/te-kete-ultimate-beauty-system.css">
    
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #f0fdf4 0%, #dbeafe 100%);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }
        .loading-container {
            text-align: center;
            background: white;
            padding: 3rem 4rem;
            border-radius: 24px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.12);
            max-width: 500px;
        }
        .spinner {
            width: 60px;
            height: 60px;
            border: 5px solid #e5e7eb;
            border-top-color: #059669;
            border-radius: 50%;
            animation: spin 1s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
            margin: 0 auto 1.5rem;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .koru-accent {
            font-size: 3rem;
            margin-bottom: 1rem;
            animation: pulse 2s ease-in-out infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        h1 {
            color: #059669;
            margin: 0 0 0.5rem;
            font-size: 1.75rem;
            font-weight: 700;
        }
        p {
            color: #6b7280;
            margin: 0 0 1rem;
            font-size: 1.05rem;
        }
        .whakataukƒ´ {
            font-style: italic;
            color: #8b5cf6;
            font-size: 0.95rem;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e5e7eb;
        }
        .error-container {
            background: #fee2e2;
            border: 2px solid #dc2626;
            border-radius: 16px;
            padding: 2rem;
            display: none;
        }
        .error-container.show {
            display: block;
        }
        .error-container h2 {
            color: #dc2626;
            margin-top: 0;
        }
        .error-container button {
            background: #dc2626;
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 1rem;
        }
        .error-container button:hover {
            background: #b91c1c;
        }
    </style>
<!-- Professional Design System -->
<link rel="stylesheet" href="/css/te-kete-professional.css"></head>
<body class="pattern-koru-subtle">
    
    <!-- Loading State -->
    <div id="loading-state" class="loading-container">
        <div class="koru-accent">üåø</div>
        <div class="spinner"></div>
        <h1>Signing you in...</h1>
        <p>Completing your authentication with kaitiakitanga</p>
        <div class="whakataukƒ´">
            "Whaowhia te kete mƒÅtauranga"<br>
            <small>Fill the basket of knowledge</small>
        </div>
    </div>

    <!-- Error State (hidden by default) -->
    <div id="error-state" class="error-container loading-container">
        <h2>‚ùå Authentication Error</h2>
        <p id="error-message">Something went wrong during sign-in.</p>
        <button onclick="window.location.href='/login.html'">Return to Login</button>
    </div>

    <!-- Supabase Auth Library -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    
    <script>
        console.log('üåø OAuth Callback Handler - Initializing...');

        // Initialize Supabase client
        const supabaseClient = window.supabase.createClient(
            'https://nlgldaqtubrlcqddppbq.supabase.co',
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sZ2xkYXF0dWJybGNxZGRwcGJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwODkzMzksImV4cCI6MjA2ODY2NTMzOX0.IFaWqep1MBSofARiCUuzvAReC44hwGnmKOMNSd55nIM'
        );

        // Show error UI
        function showError(message) {
            console.error('üö® OAuth Error:', message);
            document.getElementById('loading-state').style.display = 'none';
            const errorState = document.getElementById('error-state');
            errorState.classList.add('show');
            document.getElementById('error-message').textContent = message;
        }

        // Helper function: Get dashboard URL based on user role
        async function getUserDashboardUrl(user) {
            if (!user) return '/getting-started.html';
            
            try {
                console.log('üîç Fetching user profile for:', user.email);
                
                // Query profiles table for user role
                const { data: profile, error } = await supabaseClient
                    .from('profiles')
                    .select('role')
                    .eq('user_id', user.id)
                    .single();
                
                if (error) {
                    console.warn('‚ö†Ô∏è Profile not found:', error.message);
                    return '/getting-started.html'; // Default for new users
                }
                
                if (!profile) {
                    console.warn('‚ö†Ô∏è No profile found, using default dashboard');
                    return '/getting-started.html';
                }
                
                console.log('‚úÖ User role:', profile.role);
                
                // Route by role
                if (profile.role === 'teacher') return '/teacher-dashboard-unified.html';
                if (profile.role === 'student') return '/student-dashboard.html';
                if (profile.role === 'admin') return '/admin-dashboard.html';
                
                return '/getting-started.html'; // Fallback
                
            } catch (err) {
                console.error('‚ùå Dashboard routing error:', err);
                return '/getting-started.html';
            }
        }

        // Handle OAuth callback
        async function handleOAuthCallback() {
            try {
                console.log('üîê Processing OAuth callback...');

                // Supabase automatically handles the OAuth callback via URL parameters
                // Just need to get the session
                const { data: { session }, error: sessionError } = await supabaseClient.auth.getSession();
                
                if (sessionError) {
                    console.error('‚ùå Session error:', sessionError);
                    showError(`Authentication failed: ${sessionError.message}`);
                    return;
                }

                if (!session || !session.user) {
                    console.warn('‚ö†Ô∏è No session found after OAuth callback');
                    showError('No authentication session found. Please try signing in again.');
                    setTimeout(() => {
                        window.location.href = '/login.html';
                    }, 3000);
                    return;
                }

                console.log('‚úÖ OAuth authentication successful!');
                console.log('üë§ User:', session.user.email);
                console.log('üîë Provider:', session.user.app_metadata?.provider || 'unknown');

                // Get appropriate dashboard for user
                const dashboardUrl = await getUserDashboardUrl(session.user);
                
                console.log(`üöÄ Redirecting to: ${dashboardUrl}`);
                
                // Small delay for user to see "Signing you in..." message
                setTimeout(() => {
                    window.location.href = dashboardUrl;
                }, 800);

            } catch (error) {
                console.error('üí• Unexpected error in OAuth callback:', error);
                showError(`An unexpected error occurred: ${error.message}`);
                setTimeout(() => {
                    window.location.href = '/login.html';
                }, 5000);
            }
        }

        // Execute on page load
        console.log('üöÄ Starting OAuth callback handler...');
        handleOAuthCallback();
    </script>

    <!-- üìä ULTIMATE BEAUTY: PostHog Analytics (Privacy-First) -->
    <script src="/js/posthog-analytics.js" defer></script>

</body>
</html>

