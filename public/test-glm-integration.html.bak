<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GLM Integration Test - Te Kete Ako</title>
    <!-- üé® ULTIMATE BEAUTY SYSTEM - Te Kete Ako Design Excellence -->
 <link rel="stylesheet" href="/css/te-kete-ultimate-beauty-system.css">
 <script src="https://cdn.tailwindcss.com"></script>
 <script src="/tailwind.config.ultimate.js"></script>
 <!-- END ULTIMATE BEAUTY SYSTEM -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .test-panel {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            margin: 1rem 0;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .ai-response {
            background: linear-gradient(135deg, #059669 0%, #0284c7 100%);
            color: white;
            padding: 1.5rem;
            border-radius: 8px;
            margin: 1rem 0;
            font-family: monospace;
            white-space: pre-wrap;
            max-height: 600px;
            overflow-y: auto;
        }
        .action-button {
            background: #059669;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            font-weight: 600;
            margin: 0.5rem;
            transition: all 0.3s ease;
        }
        .action-button:hover {
            background: #047857;
            transform: translateY(-2px);
        }
        .loading {
            opacity: 0.6;
            pointer-events: none;
        }
    </style>
<!-- Professional Design System -->
<link rel="stylesheet" href="/css/te-kete-professional.css"></head>
<body class="bg-gradient-to-br from-green-50 to-blue-50 min-h-screen p-6 pattern-koru-subtle"> 
 <!-- üé® ULTIMATE BEAUTY: Navigation -->
 <div id="nav-container"></div>
 <script>
   fetch('/components/navigation-standard.html')
     .then(r => r.text())
     .then(html => document.getElementById('nav-container').innerHTML = html);
 </script>
    <div class="container mx-auto max-w-6xl">
        <div class="text-center mb-8">
            <h1 class="text-5xl font-bold mb-4">ü§ñ GLM-GraphRAG Integration Test</h1>
            <p class="text-xl text-gray-700">AI-Powered Educational Intelligence</p>
        </div>

        <!-- System Status -->
        <div class="test-panel">
            <h2 class="text-2xl font-bold mb-4">System Status</h2>
            <div id="systemStatus" class="text-lg"></div>
        </div>

        <!-- AI-Enhanced Recommendations -->
        <div class="test-panel">
            <h2 class="text-2xl font-bold mb-4">üéØ AI-Enhanced Recommendations</h2>
            <button onclick="testAIRecommendations()" class="action-button">
                Get AI-Enhanced Recommendations
            </button>
            <div id="aiRecsOutput" class="ai-response" style="display: none;"></div>
        </div>

        <!-- Content Generation -->
        <div class="test-panel">
            <h2 class="text-2xl font-bold mb-4">‚ú® AI Content Generation</h2>
            <div class="mb-4">
                <input 
                    type="text" 
                    id="topicInput" 
                    placeholder="Enter topic (e.g., 'Climate Change')" 
                    class="w-full p-3 border rounded"
                />
            </div>
            <button onclick="testContentGeneration()" class="action-button">
                Generate Lesson Content
            </button>
            <div id="contentOutput" class="ai-response" style="display: none;"></div>
        </div>

        <!-- Cultural Enhancement -->
        <div class="test-panel">
            <h2 class="text-2xl font-bold mb-4">üå∫ AI Cultural Enhancement</h2>
            <button onclick="testCulturalEnhancement()" class="action-button">
                Enhance Resource with Te Ao MƒÅori
            </button>
            <div id="culturalOutput" class="ai-response" style="display: none;"></div>
        </div>

        <!-- Gap Analysis -->
        <div class="test-panel">
            <h2 class="text-2xl font-bold mb-4">üìä AI Gap Analysis</h2>
            <button onclick="testGapAnalysis()" class="action-button">
                Analyze Content Gaps
            </button>
            <div id="gapOutput" class="ai-response" style="display: none;"></div>
        </div>
    </div>

    <!-- Load Supabase -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <script>
        window.ENV = {
            SUPABASE_URL: 'https://nlgldaqtubrlcqddppbq.supabase.co',
            SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sZ2xkYXF0dWJybGNxZGRwcGJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mjc5OTY5OTQsImV4cCI6MjA0MzU3Mjk5NH0.wScWM7v-VltrUqKDFm0BSRFH9ZjPy4oEKU5Y_gVDcRA'
        };
        window.supabase = supabase.createClient(window.ENV.SUPABASE_URL, window.ENV.SUPABASE_ANON_KEY);
    </script>

    <!-- Load Intelligence Systems -->
    <script src="/js/graphrag-self-evolution-engine.js"></script>
    <script src="/js/agent-coordinator.js"></script>
    <script src="/js/smart-recommendation-engine.js"></script>
    <script src="/js/legacy-pattern-analyzer.js"></script>
    <script src="/js/master-intelligence-hub.js"></script>
    <script src="/js/cultural-intelligence-layer.js"></script>
    <script src="/js/teaching-variant-generator.js"></script>
    <script src="/js/glm-graphrag-integration.js"></script>

    <script>
        // Wait for all systems to load
        window.addEventListener('load', async () => {
            await new Promise(resolve => setTimeout(resolve, 3000));
            updateSystemStatus();
        });

        function updateSystemStatus() {
            const status = window.GLMGraphRAG?.getStats();
            const statusDiv = document.getElementById('systemStatus');
            
            if (status) {
                statusDiv.innerHTML = `
                    <div class="grid grid-cols-2 gap-4">
                        <div><strong>GLM API:</strong> ${status.apiKey}</div>
                        <div><strong>GraphRAG:</strong> ${status.masterIntelligence}</div>
                        <div><strong>Cultural Intelligence:</strong> ${status.culturalIntelligence}</div>
                        <div><strong>Cache Size:</strong> ${status.cacheSize} requests</div>
                    </div>
                `;
            } else {
                statusDiv.innerHTML = '‚è≥ Waiting for GLM integration to initialize...';
                setTimeout(updateSystemStatus, 1000);
            }
        }

        async function testAIRecommendations() {
            const output = document.getElementById('aiRecsOutput');
            output.style.display = 'block';
            output.textContent = 'ü§ñ AI is thinking... (this may take a few seconds)';
            output.classList.add('loading');

            try {
                const result = await window.GLMGraphRAG.enhanceRecommendationsWithAI(
                    '/units/y8-critical-thinking/lesson-1.html',
                    { yearLevel: 'Y8', subject: 'Critical Thinking', cultural: true }
                );

                output.textContent = JSON.stringify(result, null, 2);
                output.classList.remove('loading');
            } catch (error) {
                output.textContent = `‚ùå Error: ${error.message}`;
                output.classList.remove('loading');
            }
        }

        async function testContentGeneration() {
            const topic = document.getElementById('topicInput').value || 'Climate Change';
            const output = document.getElementById('contentOutput');
            output.style.display = 'block';
            output.textContent = `ü§ñ Generating lesson about "${topic}"... (this may take 10-20 seconds)`;
            output.classList.add('loading');

            try {
                const result = await window.GLMGraphRAG.generateTeachingContent(topic, {
                    yearLevel: 'Y8',
                    subject: 'Science',
                    culturalContext: true,
                    teachingApproach: 'inquiry'
                });

                output.textContent = JSON.stringify(result, null, 2);
                output.classList.remove('loading');
            } catch (error) {
                output.textContent = `‚ùå Error: ${error.message}`;
                output.classList.remove('loading');
            }
        }

        async function testCulturalEnhancement() {
            const output = document.getElementById('culturalOutput');
            output.style.display = 'block';
            output.textContent = 'üå∫ AI analyzing cultural context... (this may take a few seconds)';
            output.classList.add('loading');

            try {
                // Get a sample resource
                const resource = {
                    title: 'Critical Thinking Lesson',
                    content_preview: 'Students learn to analyze arguments and evaluate evidence.',
                    file_path: '/units/y8-critical-thinking/lesson-1.html'
                };

                const result = await window.GLMGraphRAG.enhanceCulturalContext(resource);

                output.textContent = JSON.stringify(result, null, 2);
                output.classList.remove('loading');
            } catch (error) {
                output.textContent = `‚ùå Error: ${error.message}`;
                output.classList.remove('loading');
            }
        }

        async function testGapAnalysis() {
            const output = document.getElementById('gapOutput');
            output.style.display = 'block';
            output.textContent = 'üìä AI analyzing content gaps... (this may take 10-20 seconds)';
            output.classList.add('loading');

            try {
                const result = await window.GLMGraphRAG.analyzeContentGaps();

                output.textContent = JSON.stringify(result, null, 2);
                output.classList.remove('loading');
            } catch (error) {
                output.textContent = `‚ùå Error: ${error.message}`;
                output.classList.remove('loading');
            }
        }
    </script>

<!-- üé® ULTIMATE BEAUTY SYSTEM: Complete UX -->

<!-- Footer -->
<div id="footer-container"></div>
<script>
  fetch('/components/footer.html').then(r=>r.text()).then(html=>{
    document.getElementById('footer-container').innerHTML=html;
  });
</script>

<!-- Mobile Navigation -->
<div id="mobile-nav-bottom"></div>
<script>
  fetch('/components/mobile-bottom-nav.html').then(r=>r.text()).then(html=>{
    document.getElementById('mobile-nav-bottom').innerHTML=html;
  });
</script>

<!-- Floating Action Button (Help) -->
<div id="fab-quick-actions"></div>
<script>
  fetch('/components/quick-actions-fab.html').then(r=>r.text()).then(html=>{
    document.getElementById('fab-quick-actions').innerHTML=html;
  });
</script>

<!-- üé® ULTIMATE BEAUTY: Framer Cultural Gestures -->
<script src="/js/framer-cultural-gestures-ultimate.js" defer></script>


<!-- üìä ULTIMATE BEAUTY: PostHog Analytics (Privacy-First) -->
<script src="/js/posthog-analytics.js" defer></script>

</body>
</html>

