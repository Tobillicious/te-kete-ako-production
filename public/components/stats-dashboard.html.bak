<!-- VISUAL STATISTICS DASHBOARD -->
<section class="kowhaiwhai-border-top" style="background: linear-gradient(135deg, #f0fdfa, #ccfbf1); padding: 4rem 2rem; margin: 4rem 0; border-radius: 20px; box-shadow: 0 8px 24px rgba(20,184,166,0.15); position: relative;">
    <div style="max-width: 1400px; margin: 0 auto;">
        <div style="text-align: center; margin-bottom: 3rem;">
            <h2 style="font-size: 2.5rem; color: #0f766e; margin-bottom: 1rem; font-weight: 700;">
                ðŸ“Š Platform Statistics
            </h2>
            <p style="font-size: 1.2rem; color: #14b8a6;">
                Real-time data from our growing knowledge base
            </p>
        </div>

        <!-- Animated stat counters -->
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 2rem; margin-bottom: 3rem;">
            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #0284c7;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #0284c7; margin-bottom: 0.5rem;" class="stat-counter" id="total-resources-stat" data-target="0">
                    0
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Total Resources</div>
                <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;">
                    <span id="growth-stat" style="color: #16a34a; font-weight: 700; font-size: 0.9rem;">Loading...</span>
                </div>
            </div>

            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #16a34a;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #16a34a; margin-bottom: 0.5rem;" class="stat-counter" data-target="377">
                    0
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Integrated Lessons</div>
                <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;">
                    <span style="color: #6b7280; font-size: 0.9rem;">40,694 lines of content</span>
                </div>
            </div>

            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #f59e0b;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #f59e0b; margin-bottom: 0.5rem;" class="stat-counter" data-target="1007">
                    0
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Teaching Variants</div>
                <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;">
                    <span style="color: #6b7280; font-size: 0.9rem;">Multiple options per lesson</span>
                </div>
            </div>

            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #7c3aed;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #7c3aed; margin-bottom: 0.5rem;">
                    <span class="stat-counter" data-target="34">0</span>%
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Coverage Progress</div>
                <div style="margin-top: 0.5rem;">
                    <div style="background: #e5e7eb; height: 8px; border-radius: 4px; overflow: hidden;">
                        <div id="progress-bar" style="background: linear-gradient(90deg, #7c3aed, #a78bfa); height: 100%; width: 0%; transition: width 2s ease;"></div>
                    </div>
                </div>
            </div>

            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #ec4899;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #ec4899; margin-bottom: 0.5rem;" class="stat-counter" data-target="109">
                    0
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Handouts</div>
                <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;">
                    <span style="color: #6b7280; font-size: 0.9rem;">Ready to print</span>
                </div>
            </div>

            <div style="background: white; padding: 2.5rem 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 12px rgba(0,0,0,0.08); border-top: 4px solid #14b8a6;">
                <div style="font-size: 3.5rem; font-weight: 800; color: #14b8a6; margin-bottom: 0.5rem;" class="stat-counter" data-target="23">
                    0
                </div>
                <div style="color: #546e7a; font-size: 1rem; font-weight: 600;">Assessments</div>
                <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;">
                    <span style="color: #6b7280; font-size: 0.9rem;">Culturally responsive</span>
                </div>
            </div>
        </div>

        <!-- Resource Type Breakdown -->
        <div style="background: white; padding: 2rem; border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08);">
            <h3 style="color: #1a4d2e; margin-bottom: 1.5rem; text-align: center;">ðŸ“š Resource Type Breakdown</h3>
            <div id="resource-breakdown" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem;">
                <!-- Will be populated by JavaScript -->
            </div>
        </div>
    </div>
</section>

<script>
    // Animated counter
    function animateCounter(element) {
        const target = parseInt(element.getAttribute('data-target'));
        const duration = 2000;
        const increment = target / (duration / 16);
        let current = 0;

        const timer = setInterval(() => {
            current += increment;
            if (current >= target) {
                element.textContent = target.toLocaleString();
                clearInterval(timer);
            } else {
                element.textContent = Math.floor(current).toLocaleString();
            }
        }, 16);
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', () => {
        // Animate all stat counters
        document.querySelectorAll('.stat-counter').forEach(animateCounter);
        
        // Animate progress bar
        setTimeout(() => {
            document.getElementById('progress-bar').style.width = '34%';
        }, 500);
        
        // Load resource breakdown
        loadResourceBreakdown();
    });

    async function loadResourceBreakdown() {
        // Query REAL GraphRAG data
        try {
            const url = 'https://nlgldaqtubrlcqddppbq.supabase.co/rest/v1/graphrag_resources';
            const headers = {
                'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sZ2xkYXF0dWJybGNxZGRwcGJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwODkzMzksImV4cCI6MjA2ODY2NTMzOX0.IFaWqep1MBSofARiCUuzvAReC44hwGnmKOMNSd55nIM',
                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sZ2xkYXF0dWJybGNxZGRwcGJxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwODkzMzksImV4cCI6MjA2ODY2NTMzOX0.IFaWqep1MBSofARiCUuzvAReC44hwGnmKOMNSd55nIM'
            };
            
            // Get total count
            const totalResp = await fetch(`${url}?select=*&limit=1`, { headers: new Headers({...headers, 'Prefer': 'count=exact'}) });
            const totalCount = parseInt(totalResp.headers.get('content-range').split('/')[1]);
            
            // Update total resources counter
            const totalEl = document.getElementById('total-resources-stat');
            if (totalEl) {
                totalEl.setAttribute('data-target', totalCount);
                animateCounter(totalEl);
            }
            
            // Update growth stat
            const growthEl = document.getElementById('growth-stat');
            if (growthEl) {
                const growth = ((totalCount - 19445) / 19445 * 100).toFixed(0);
                growthEl.textContent = `â†‘ +${growth}% growth today`;
            }
            
            // Get type breakdown (active only)
            const types = ['lesson', 'handout', 'unit-plan', 'interactive', 'game', 'assessment'];
            const breakdown = [];
            const colors = ['#0284c7', '#f59e0b', '#16a34a', '#7c3aed', '#ec4899', '#14b8a6'];
            
            for (let i = 0; i < types.length; i++) {
                const typeResp = await fetch(`${url}?type=eq.${types[i]}&is_active=eq.true&select=*&limit=1`, 
                    { headers: new Headers({...headers, 'Prefer': 'count=exact'}) });
                const count = parseInt(typeResp.headers.get('content-range').split('/')[1]) || 0;
                breakdown.push({ 
                    type: types[i].replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase()), 
                    count, 
                    color: colors[i] 
                });
            }

            const container = document.getElementById('resource-breakdown');
            container.innerHTML = breakdown.map(item => `
                <div style="text-align: center; padding: 1rem; border-radius: 8px; background: ${item.color}15; border: 2px solid ${item.color}33;">
                    <div style="font-size: 2rem; font-weight: 700; color: ${item.color};">${item.count}</div>
                    <div style="color: #546e7a; font-size: 0.9rem; margin-top: 0.25rem;">${item.type}</div>
                </div>
            `).join('');
        } catch (error) {
            console.error('Error loading stats:', error);
        }
    }
</script>
